{"ast":null,"code":"var _jsxFileName = \"/home/mirsahib/Desktop/Simple-Comment/frontend/src/component/comment.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comment(_ref) {\n  let {\n    commentBody,\n    replies\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/user-icon.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-right-part\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: commentBody.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: commentBody.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-text\",\n        children: commentBody.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), replies.length > 0 && replies.map(reply => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          commentBody: reply,\n          replies: []\n        }, reply.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/home/mirsahib/Desktop/Simple-Comment/frontend/src/component/comment.tsx"],"names":["Comment","commentBody","replies","username","createdAt","body","length","map","reply","id"],"mappings":";;;AAOA,SAASA,OAAT,OAAqD;AAAA,MAApC;AAACC,IAAAA,WAAD;AAAaC,IAAAA;AAAb,GAAoC;AACjD,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAC,gBAAT;AAA0B,QAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACKD,WAAW,CAACE;AADjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBAAMF,WAAW,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACCH,WAAW,CAACI;AADb;AAAA;AAAA;AAAA;AAAA,cAPJ,EAUKH,OAAO,CAACI,MAAR,GAAgB,CAAhB,IACGJ,OAAO,CAACK,GAAR,CAAYC,KAAK,IAAE;AACf,4BACI,QAAC,OAAD;AAAwB,UAAA,WAAW,EAAEA,KAArC;AAA4C,UAAA,OAAO,EAAE;AAArD,WAAcA,KAAK,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJD,CAXR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;KA1BQT,O;AA4BT,eAAeA,OAAf","sourcesContent":["import { IComments } from './comments'\n\ninterface CommentsProps{\n    commentBody:IComments\n    replies:IComments[]\n}\n\nfunction Comment({commentBody,replies}:CommentsProps){\n    return(\n        <div className='comment'>\n            <div className=\"comment-image-container\">\n                <img src=\"/user-icon.png\" alt=\"\" />\n            </div>\n            <div className='comment-right-part'>\n                <div className=\"comment-content\">\n                    <div className=\"comment-author\">\n                        {commentBody.username}\n                    </div>\n                    <div>{commentBody.createdAt}</div>\n                </div>\n                <div className=\"comment-text\">\n                {commentBody.body}\n                </div>\n                {replies.length >0 && (\n                    replies.map(reply=>{\n                        return (\n                            <Comment key={reply.id} commentBody={reply} replies={[]}/>\n                        )\n                    })\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Comment"]},"metadata":{},"sourceType":"module"}